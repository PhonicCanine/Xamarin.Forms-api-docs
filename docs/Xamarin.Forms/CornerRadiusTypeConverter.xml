<Type Name="CornerRadiusTypeConverter" FullName="Xamarin.Forms.CornerRadiusTypeConverter">
  <TypeSignature Language="C#" Value="public class CornerRadiusTypeConverter : Xamarin.Forms.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CornerRadiusTypeConverter extends Xamarin.Forms.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.CornerRadiusTypeConverter" />
  <TypeSignature Language="F#" Value="type CornerRadiusTypeConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Xamarin.Forms.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Xamarin.Forms.Xaml.TypeConversion(typeof(Xamarin.Forms.CornerRadius))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>A <see cref='T:Xamarin.Forms.TypeConverter' /> subclass that can convert a string to a <see cref='T:Xamarin.Forms.CornerRadius' />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CornerRadiusTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.CornerRadiusTypeConverter.#ctor" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFromInvariantString">
      <MemberSignature Language="C#" Value="public override object ConvertFromInvariantString (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFromInvariantString(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:Xamarin.Forms.CornerRadiusTypeConverter.ConvertFromInvariantString(System.String)" />
      <MemberSignature Language="F#" Value="override this.ConvertFromInvariantString : string -&gt; obj" Usage="cornerRadiusTypeConverter.ConvertFromInvariantString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">A string whose value must be parseable as one or more <see cref='T:System.Double' /> objects.</param>
        <summary>Parses <param name="value" /> as one or more <see cref='T:System.Double' /> object(s) and creates a corresponding <see cref='T:Xamarin.Forms.CornerRadius' />.</summary>
        <returns>A <see cref='T:Xamarin.Forms.CornerRadius' /> object whose values correspond to those in <param name="value" />.</returns>
        <remarks>
          <para>The <param name="value" /> parameter may be a single number (resulting in uniform radii), or it may be a comma-separated value (as in XAML) or space-separated (as in CSS). If multi-valued: </para>
          <list type="table">
            <listheader>
              <term>Number of values</term>
              <definition>Interpretation</definition>
            </listheader>  
            <item><term>1</term><definition>All corners are uniformly rounded</definition></item>
            <item><term>2</term><definition>First number defines radii of top corners, second of bottom corners</definition></item>
            <item><term>3</term><definition>First number determines radius of top left, second of top right and bottom left, third of bottom right</definition></item>
            <item><term>4</term><definition>Radii are determined in the order: top left, top right, bottom left, bottom right</definition></item>
            </list>
              
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>

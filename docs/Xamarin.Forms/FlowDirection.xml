<Type Name="FlowDirection" FullName="Xamarin.Forms.FlowDirection">
  <TypeSignature Language="C#" Value="public enum FlowDirection" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FlowDirection extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Xamarin.Forms.FlowDirection" />
  <TypeSignature Language="F#" Value="type FlowDirection = " />
  <AssemblyInfo>
    <AssemblyName>Xamarin.Forms.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>Xamarin.Forms.TypeConverter(typeof(Xamarin.Forms.FlowDirectionConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enumerates values that control the layout direction for views.</summary>
    <remarks>
      <para>The following contains a few important points from <format type="text/html"><a href="https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/localization/rtl">Right-to-Left Localization</a></format>. Developers should consult that document for more information about limitations of right-to-left support, and for requirements to implement right-to-left support on various target platforms.</para>
      <para>The default value of <see cref="T:Xamarin.Forms.FlowDirection" /> for a visual element that has no parent is <see cref="F:Xamarin.Forms.FlowDirection.LeftToRight" />, even on platforms where <see cref="P:Xamarin.Forms.Device.FlowDirection" /> is <see cref="F:Xamarin.Forms.FlowDirection.RightToLeft" />. Therefore, developers must deliberately opt in to right-to-left layout. Developers can choose right-to-left layout by setting the <see cref="P:Xamarin.Forms.VisualElement.FlowDirection" /> property of the root element to <see cref="F:Xamarin.Forms.FlowDirection.RightToLeft" /> to chosse right-to-left layout, or to <see cref="F:Xamarin.Forms.FlowDirection.MatchParent" /> to match the device layout.</para>
      <para>All <see cref="T:Xamarin.Forms.VisualElement" />s that have a parent default to <see cref="F:Xamarin.Forms.FlowDirection.MatchParent" />.</para>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LeftToRight">
      <MemberSignature Language="C#" Value="LeftToRight" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.Forms.FlowDirection LeftToRight = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.FlowDirection.LeftToRight" />
      <MemberSignature Language="F#" Value="LeftToRight = 1" Usage="Xamarin.Forms.FlowDirection.LeftToRight" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.FlowDirection</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Indicates that view will be laid out left to right. This is the default when the view has no parent.</summary>
      </Docs>
    </Member>
    <Member MemberName="MatchParent">
      <MemberSignature Language="C#" Value="MatchParent" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.Forms.FlowDirection MatchParent = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.FlowDirection.MatchParent" />
      <MemberSignature Language="F#" Value="MatchParent = 0" Usage="Xamarin.Forms.FlowDirection.MatchParent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.FlowDirection</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Indicates that the view's layout direction will match the parent view's layout direction.</summary>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="RightToLeft" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Xamarin.Forms.FlowDirection RightToLeft = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Xamarin.Forms.FlowDirection.RightToLeft" />
      <MemberSignature Language="F#" Value="RightToLeft = 2" Usage="Xamarin.Forms.FlowDirection.RightToLeft" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Xamarin.Forms.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Xamarin.Forms.FlowDirection</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Indicates that view will be laid out right to left.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
